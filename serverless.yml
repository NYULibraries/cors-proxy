service: web-lambdas-cors-proxy
provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  runtime: nodejs10.x
  role: ${env:LAMBDA_ROLE}
  apiName: web-lambdas-${opt:stage, 'dev'}
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: ${env:S3_BUCKET}
  apiGateway:
    # Resource ids for rest api, so serverless deploys to this static resource vs. creating its own
    restApiId: ${env:REST_API_ID}
    restApiRootResourceId: ${env:REST_API_ROOT_RESOURCE_ID}
  environment:
    ALLOW_ORIGINS: http*://*library.nyu.edu, http://ab226522b66734a3ab54f793c0cad2cc-1255392027.us-east-1.elb.amazonaws.com

package:
  include:
    - handler.js
    - common/**
    - config/**
  exclude:
    - docker-compose*
    - Dockerfile*

functions:
  cors-proxy:
    name: ${self:service}-cors-proxy-${opt:stage, 'dev'}
    events:
      - http:
          method: get
          path: cors-proxy
    handler: handler.corsProxy
    memorySize: 1024
